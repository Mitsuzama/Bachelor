using System;
using System.Collections.Generic;
using UnityEngine;
using System.IO;
using Newtonsoft.Json;
using Item;

namespace Logger
{
    public class FileCreator : MonoBehaviour
    {
        private bool fileCreated = false;

        private void Start()
        {
            if (!fileCreated)
            {
                CreateEventFile();
                fileCreated = true;
            }
        }

        private void CreateEventFile()
        {
            string fileName = "SavedEvents_" + DateTime.Now.ToString("MM-dd-yyyy-HH") + ".json";
            string filePath = Path.Combine(Application.dataPath, "SavedEvents", fileName);
            List<JSONData> eventList = new List<JSONData>();

            string json = JsonConvert.SerializeObject(eventList, Formatting.Indented);
            File.WriteAllText(filePath, json);

            Debug.Log("Event file created: " + filePath);
        }
    }

    public static class DataLogger
    {
        private static string CreateUniqueName()
        {
            return DateTime.Now.ToString("MM-dd-yyyy--HH-mm-ss");
        }

        public static JSONData CreateJsonDocument(int tip_actiune, float durata, ItemInfo itemInfo)
        {
            JSONData jsonDocument = new JSONData();

            DateTimeOffset dateTime = DateTimeOffset.UtcNow;
            long unixTimestamp = dateTime.ToUnixTimeMilliseconds();

            jsonDocument.timestamp = unixTimestamp.ToString();
            jsonDocument.tip_actiune = (tip_actiune == 1) ? "TEMPTATION" : "BUY";
            jsonDocument.durata = durata;
            jsonDocument._id = itemInfo.GetInstanceID();
            jsonDocument.nume = itemInfo.ItemName;
            jsonDocument.descriere = itemInfo.ItemDescription;
            jsonDocument.pret = itemInfo.ItemPrice;
            jsonDocument.nutritional_info = itemInfo.ItemNutritionalInfo;

            return jsonDocument;
        }
    }
    
    public class EventLogger : MonoBehaviour
    {
        private void Start()
        {
            if (!File.Exists(GetFilePath()))
            {
                FileCreator fileCreator = gameObject.AddComponent<FileCreator>();
            }
        }

        private string GetFilePath()
        {
            string fileName = "SavedEvents_" + DateTime.Now.ToString("MM-dd-yyyy-HH") + ".json";
            return Path.Combine(Application.dataPath, "SavedEvents", fileName);
        }

        public void LogEvent(int actionType, float duration, ItemInfo itemInfo)
        {
            string filePath = GetFilePath();
            List<JSONData> savedDataList;

            if (itemInfo == null)
            {
                throw new ArgumentNullException("LogEvent: itemInfo");
            }

            if (!File.Exists(filePath))
            {
                throw new FileNotFoundException("The file was not found!", filePath);
            }

            var length = new FileInfo(filePath).Length;
            if (length == 0) // If the file is empty, initialize the list
            {
                savedDataList = new List<JSONData>();
            }
            else // If the file has data, read the existing data
            {
                string readText = File.ReadAllText(filePath);
                savedDataList = JsonConvert.DeserializeObject<List<JSONData>>(readText);
            }

            try
            {
                JSONData newEntry = DataLogger.CreateJsonDocument(actionType, duration, itemInfo);
                savedDataList.Add(newEntry);
                string json = JsonConvert.SerializeObject(savedDataList, Formatting.Indented);

                File.WriteAllText(filePath, json);
                Debug.Log("Event saved to JSON: " + filePath);
            }
            catch (Exception ex)
            {
                Debug.Log(ex);
            }
        }
    }
}
